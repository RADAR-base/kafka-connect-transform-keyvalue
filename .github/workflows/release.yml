# Create release files
name: Release

on:
  release:
    types: [published]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/kafka-connect-transform-keyvalue
  DOCKER_IMAGE_S3: ghcr.io/${{ github.repository }}/kafka-connect-transform-s3

jobs:
  upload:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Compile code
      - name: Compile code
        run: ./gradlew assemble

      # Upload it to GitHub
      - name: Upload to GitHub
        uses: AButler/upload-release-assets@v2.0.2
        with:
          files: 'build/libs/*;build/distributions/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  # Build and push tagged release docker image
  docker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      # Add Docker labels and tags
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=match,pattern=v(.*),group=1

      # Add Docker labels and tags
      - name: Docker meta S3
        id: docker_meta_s3
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE_S3 }}
          tags: |
            type=match,pattern=v(.*),group=1

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          platforms: linux/arm64,linux/amd64
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            maintainer=Pim van Nierop <pim@thehyve.nl>
            org.opencontainers.image.authors=Pim van Nierop <pim@thehyve.nl>
            org.opencontainers.image.vendor=RADAR-base
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.description=Key-value transformation for Kafka Connect

      - name: Build and push S3
        id: docker_build_s3
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.s3
          push: true
          platforms: linux/arm64,linux/amd64
          tags: ${{ steps.docker_meta_s3.outputs.tags }}
          labels: |
            ${{ steps.docker_meta_s3.outputs.labels }}
            maintainer=Pim van Nierop <pim@thehyve.nl>
            org.opencontainers.image.authors=Pim van Nierop <pim@thehyve.nl>
            org.opencontainers.image.vendor=RADAR-base
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.description=Key-value transformation for Kafka Connect, with S3 connector loaded

      - name: Inspect image
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}

      - name: Inspect image S3
        run: |
          docker pull ${{ env.DOCKER_IMAGE_S3 }}:${{ steps.docker_meta_s3.outputs.version }}
          docker image inspect ${{ env.DOCKER_IMAGE_S3 }}:${{ steps.docker_meta_s3.outputs.version }}
